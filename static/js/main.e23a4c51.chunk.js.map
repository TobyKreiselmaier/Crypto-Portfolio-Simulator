{"version":3,"sources":["components/ExchangeHeader/logo.svg","components/ExchangeHeader/ExchangeHeader.jsx","components/AccountBalance/AccountBalance.jsx","components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","styled","header","Img","img","H1","h1","ExchangeHeader","src","logo","alt","Section","section","Button","button","AccountBalance","props","showBalance","amount","onClick","handleBalanceDisplay","Td","td","Coin","name","ticker","price","balance","action","method","event","preventDefault","handleRefresh","tickerId","Table","table","CoinList","coinData","map","key","Div","div","formatPrice","parseFloat","Number","toFixed","App","useState","setShowBalance","setCoinData","getTopIds","a","axios","get","response","data","slice","coin","id","getNewCoinData","ids","i","length","j","push","symbol","quotes","USD","componentDidMount","topIds","newCoinData","useEffect","newPrice","values","newValues","className","oldValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e23a4c51.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport logo from './logo.svg'\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n    background-color: #282c34;\r\n    min-height: 10vh;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    font-size: 36px;\r\n    color: white;\r\n`;\r\n\r\nconst Img = styled.img`\r\n    height: 8rem;\r\n    pointer-events: none;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n    font-size: 4rem;\r\n`;\r\n\r\nexport default function ExchangeHeader () {\r\n    return (\r\n        <Header>\r\n            <Img src={logo} alt='React Logo'></Img>\r\n            <H1>\r\n                Coin Exchange\r\n            </H1>\r\n        </Header>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Section = styled.section`\r\n    font-size: 2rem;\r\n    text-align: left;\r\n    padding: 1.5rem 5rem 1.5rem 5rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    font-size: 1.6rem;\r\n    margin: 1.5rem 0 1.5rem 5rem;\r\n    background-color: #282c34;\r\n    color: #fff;\r\n    border: 1px solid #fff;\r\n    border-radius: 5px;\r\n`;\r\n\r\nexport default function AccountBalance (props) {\r\n    return (\r\n        <Section>\r\n            {props.showBalance ? <>Account Balance: ${props.amount}</> : null}\r\n            <Button onClick={props.handleBalanceDisplay}>\r\n                {props.showBalance ? 'Hide Balance' : 'Show Balance'}\r\n            </Button>\r\n        </Section>\r\n    );\r\n}\r\n\r\nAccountBalance.propTypes = {\r\n    amount: propTypes.number.isRequired\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Td = styled.td`\r\n    border: 1px solid rgb(15, 10, 10);\r\n    width: 25vh;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    font-size: 1.0rem;\r\n    margin: 0.5rem 0 0.5rem 0;\r\n    background-color: #282c34;\r\n    color: #fff;\r\n    border: 1px solid #fff;\r\n    border-radius: 5px;\r\n`;\r\n\r\nexport default function Coin (props) {\r\n  const handleClick = (event) => {\r\n    event.preventDefault();\r\n    props.handleRefresh(props.tickerId);\r\n  }\r\n  \r\n  return (\r\n    <tr>\r\n      <Td>{props.name}</Td>\r\n      <Td>{props.ticker}</Td>\r\n      <Td>${props.price}</Td>\r\n      {props.showBalance ? <Td>{props.balance} {props.ticker}</Td> : null}\r\n      <Td>\r\n        <form action='#' method='POST'>\r\n          <Button onClick={handleClick}>Refresh\r\n          </Button>\r\n        </form>\r\n      </Td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nCoin.propTypes = {\r\n  name: propTypes.string.isRequired,\r\n  ticker: propTypes.string.isRequired,\r\n  price: propTypes.number.isRequired\r\n}","import React from 'react';\r\nimport Coin from '../Coin/Coin';\r\nimport styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\n    margin: auto;\r\n    display: inline-block;\r\n    font-size: 1.4 rem\r\n`;\r\n\r\nexport default function CoinList (props) {\r\n    return (\r\n        <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Ticker</th>\r\n            <th>Price</th>\r\n            {props.showBalance ? <th>Balance</th> : null}\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            props.coinData.map(({key, name, ticker, price, balance}) =>\r\n              <Coin key={key} \r\n                    handleRefresh={props.handleRefresh} \r\n                    name={name} \r\n                    ticker={ticker} \r\n                    showBalance={props.showBalance}\r\n                    balance={balance}\r\n                    price={price}\r\n                    tickerId={key}/>\r\n            )\r\n          }\r\n        </tbody>\r\n      </Table>\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader';\r\nimport AccountBalance from './components/AccountBalance/AccountBalance';\r\nimport CoinList from './components/CoinList/CoinList';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\nconst Div = styled.div`\r\n    text-align: center;\r\n    background-color:#61DBFB;\r\n    color: rgb(15, 10, 10);\r\n`;\r\n\r\nconst COIN_COUNT = 10;\r\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\r\n\r\nfunction App (props) {\r\n  const [balance, setBalance] = useState(10000);//use State Hook\r\n  const [showBalance, setShowBalance] = useState(true);\r\n  const [coinData, setCoinData] = useState([]);\r\n\r\n  const getTopIds = async () => {\r\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\r\n    return response.data.slice(0, COIN_COUNT).map(coin => coin.id);\r\n  }\r\n\r\n  const getNewCoinData = async (ids) => {\r\n    let data = [];\r\n    const response = await axios.get('https://api.coinpaprika.com/v1/tickers');\r\n    for (let i = 0; i < response.data.length; i++) {\r\n      for (let j = 0; j < ids.length; j++) {\r\n        if (ids[j] === response.data[i].id) {\r\n          data.push({ \r\n            key: response.data[i].id,\r\n            name: response.data[i].name,\r\n            ticker: response.data[i].symbol,\r\n            balance: 0,\r\n            price: formatPrice(response.data[i].quotes.USD.price),\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  const componentDidMount = async () => {\r\n    const topIds = await getTopIds();\r\n    const newCoinData = await getNewCoinData(topIds);\r\n    setCoinData(newCoinData);\r\n  }\r\n\r\n  useEffect(() => {//Effect Hook - can not be async!\r\n    if (coinData.length === 0) {//componentDidMount sitation\r\n      componentDidMount();\r\n    }\r\n  });\r\n\r\n  const handleBalanceDisplay = () => {\r\n    setShowBalance(oldValue => !oldValue)\r\n  }\r\n\r\n  const handleRefresh = async (tickerId) => {\r\n    const response = await axios.get(`https://api.coinpaprika.com/v1/tickers/${tickerId}`);\r\n    const newPrice = formatPrice(response.data.quotes.USD.price);\r\n    const newCoinData = coinData.map((values) => {\r\n      let newValues = { ...values };\r\n      if (tickerId === values.key) {\r\n        newValues.price = newPrice;\r\n      }\r\n      return newValues;\r\n    });\r\n    setCoinData(newCoinData);\r\n  }\r\n\r\n  return (\r\n    <Div className=\"App\">\r\n      <ExchangeHeader/>\r\n      <AccountBalance amount={balance} \r\n                      showBalance={showBalance} \r\n                      handleBalanceDisplay={handleBalanceDisplay}/>\r\n      <CoinList coinData={coinData} \r\n                showBalance={showBalance}\r\n                handleRefresh={handleRefresh}/>\r\n    </Div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}